services:
  euxcel-api:
    build:
      context: ../../
      dockerfile: ./projects/euxcel-api/Dockerfile.stg
    image: "euxcel-api:${APP_VERSION}"
    env_file:
      - .env
    ports:
      - "${HTTP_SERVER_PORT}:${HTTP_SERVER_PORT}"
    environment:
      - APP_ENV=stg
      - APP_ROOT=/app
      - GO111MODULE=on
      - GIN_MODE=release
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    user: "1000:1000"
    healthcheck:
      test: ["CMD-SHELL", "pgrep tail || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  postgres:
    image: postgres:16.3
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_stg:/var/lib/postgresql/data
      - ./infra/postgres-storage:/storage:ro
      - ./infra/postgres-init:/docker-entrypoint-initdb.d:ro
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7.0
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - redis_data_stg:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "${SMTP_PORT}:${SMTP_PORT}"
      - "${MH_WEB_UI_PORT}:${MH_WEB_UI_PORT}"
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - mailhog_data_stg:/var/lib/mailhog

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data_stg:
  redis_data_stg:
  mailhog_data_stg:
